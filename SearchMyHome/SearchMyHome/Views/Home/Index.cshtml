@{
    ViewBag.Title = "SearchMyHome";
    Layout = "~/Views/Shared/_CustomersLayout.cshtml";
}

<div class="ui inverted vertical masthead center aligned segment">
    <!--MENU HEADER-->
    <div class="ui container">
        <div class="ui large secondary inverted pointing menu">
            <a class="toc item">
                <i class="sidebar icon"></i>
            </a>
            <a class="active item">Inicio</a>
            <a class="item">Buscar Inmuebles</a>
            <a class="item">Planes de suscripción</a>
            <div class="right item">
                <a class="ui inverted button" >Iniciar Sesión</a>
                <a class="ui inverted button" href="@Url.Action("Register","Account")">Registrarse</a>
            </div>
        </div>
    </div>
    <!--MENU HEADER-->

    <div class="ui container" style="margin-top:15px">
        <div class="ui stackable grid">
            <div class="ui eight wide column">
                <!--MAIN SEARCH MENU-->
                <div class="ui inverted ten wide segment">
                    <div class="ui form">
                        <div class="field">
                            <div class="ui search">
                                <div class="ui icon input">
                                    <input class="prompt" type="text" id="search-main-input" onFocus="geolocate()" placeholder="Dirección">
                                    <i class="search icon"></i>
                                </div>
                                <div class="results"></div>
                            </div>
                        </div>
                    </div>
                </div>
                <!--MAIN SEARCH MENU-->
            </div>

            <div class="ui eight wide column">
                <div class="ui fluid container">
                    <div class="ui grid">
                        <div class="ui inverted six wide segment">
                            <div class="ui text">
                                <h1 class="ui  inverted header">
                                    <img src="@Url.Content("~/Content/image/OfficialLogo.png")" />
                                </h1>
                                <h2>Do whatever you want when you want to.</h2>
                                <div class="ui huge primary button">Get Started <i class="right arrow icon"></i></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
  
   

    

</div>

<!---Content of page-->
<div class="ui contanier">
    <div class="ui stackable grid">
        <div class="ui six wide column">
            <div class="ui segment">
                <div class="ui form">
                     <div class="field">
                         <label>Tipo Inmueble</label>
                         <select></select>
                     </div>
                </div>
            </div>
        </div>
        <div class="ui ten wide column">
            <div class="ui basic segment stackable four cards">
                @for (int index = 1; index < 10; index++ )
                {

                        <div class="ui card">
                            <div class="image">
                                <img src="~/Content/image/r@(index).jpg" />
                            </div>
                            <div class="extra">
                                <i class="dollar icon"></i>
                                RD 1,000,000
                            </div>
                        </div>
                    
                }
            </div>
        </div>
    </div>
</div>




@section scripts{
<script src="~/Content/semantic-ui/components/visibility.js"></script>
<script src="~/Content/semantic-ui/components/sidebar.js"></script>
<script src="~/Content/semantic-ui/components/transition.js"></script>
<!--- Component JS -->

<script type="text/javascript" src="~/Content/semantic-ui/components/popup.js"></script>
<script type="text/javascript" src="~/Content/semantic-ui/components/dimmer.js"></script>
<script type="text/javascript" src="~/Content/semantic-ui/components/rating.js"></script>
<script type="text/javascript" src="~/Content/semantic-ui/components/transition.js"></script>
<script>
  $(document)
    .ready(function() {

      // fix menu when passed
      $('.masthead')
        .visibility({
          once: false,
          onBottomPassed: function() {
            $('.fixed.menu').transition('fade in');
          },
          onBottomPassedReverse: function() {
            $('.fixed.menu').transition('fade out');
          }
        })
      ;

      // create sidebar and attach to menu open
      $('.ui.sidebar')
        .sidebar('attach events', '.toc.item')
      ;

    })
  ;
</script>
<script>
  $(document)
    .ready(function() {
      $('.special.card .image').dimmer({
        on: 'hover'
      });
      $('.star.rating')
        .rating()
      ;
      $('.card .dimmer')
        .dimmer({
          on: 'hover'
        })
      ;
    })
  ;
</script>


<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCMcn-JEubU5OtrOyRVYYxdyEALtwEJ6DQ&libraries=places"></script>

    <script>
        // This example displays an address form, using the autocomplete feature
        // of the Google Places API to help users fill in the information.

        var placeSearch, autocomplete;
        var componentForm = {
            street_number: 'short_name',
            route: 'long_name',
            locality: 'long_name',
            administrative_area_level_1: 'short_name',
            country: 'long_name',
            postal_code: 'short_name'
        };

        function initAutocomplete() {
            // Create the autocomplete object, restricting the search to geographical
            // location types.
            autocomplete = new google.maps.places.Autocomplete(
                (document.getElementById('search-main-input')),
                { types: ['geocode'] });

            // When the user selects an address from the dropdown, populate the address
            // fields in the form.
            autocomplete.addListener('place_changed', fillInAddress);
        }

        function fillInAddress() {
            // Get the place details from the autocomplete object.
            var place = autocomplete.getPlace();

            for (var component in componentForm) {
                document.getElementById(component).value = '';
                document.getElementById(component).disabled = false;
            }

            // Get each component of the address from the place details
            // and fill the corresponding field on the form.

            for (var i = 0; i < place.address_components.length; i++) {
                var addressType = place.address_components[i].types[0];
                if (componentForm[addressType]) {
                    var val = place.address_components[i][componentForm[addressType]];
                    document.getElementById(addressType).value = val;
                }
            }
        }

        // Bias the autocomplete object to the user's geographical location,
        // as supplied by the browser's 'navigator.geolocation' object.
        function geolocate() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    var geolocation = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };
                    var circle = new google.maps.Circle({
                        center: geolocation,
                        radius: position.coords.accuracy
                    });
                    autocomplete.setBounds(circle.getBounds());
                });
            }
        }
    </script>

    }